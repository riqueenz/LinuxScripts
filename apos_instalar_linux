#!/bin/bash
clear

# Detectar distro
DISTRO="Desconhecido"
. /etc/os-release
echo " "
echo "Distribuição linux detectada:"
DISTRO=$ID
echo "$DISTRO"
echo " "

# Detectar o gerenciador de pacotes da distro
INSTALAR="echo"
if [ $DISTRO == "debian" ]; then
  echo 'O gerenciador de pacotes apt está instalado' >&2
  apt install -y sudo
  INSTALAR="sudo apt install -y"
fi

if ! [ -x "$(command -v apt)" ]; then
  echo 'O gerenciador de pacotes apt não está instalado' >&2
else
  INSTALAR="sudo apt install -y"
  echo 'O gerenciador de pacotes apt está instalado' >&2
fi
if ! [ -x "$(command -v nala)" ]; then
  echo 'O gerenciador de pacotes nala não está instalado' >&2
else
  INSTALAR="sudo nala install --assume-yes"
  echo 'O gerenciador de pacotes nala está instalado' >&2
fi
if ! [ -x "$(command -v pacman)" ]; then
  echo 'O gerenciador de pacotes pacman não está instalado' >&2
else
  echo 'O gerenciador de pacotes pacman está instalado' >&2
  INSTALAR="sudo pacman -S --no-confirm"
fi
if ! [ -x "$(command -v pamac)" ]; then
  echo 'O gerenciador de pacotes pamac não está instalado' >&2
else
  echo 'O gerenciador de pacotes pamac está instalado' >&2
  INSTALAR="sudo pamac install --no-confirm"
fi
if ! [ -x "$(command -v dnf)" ]; then
  echo 'O gerenciador de pacotes dnf não está instalado' >&2
else
  echo 'O gerenciador de pacotes dnf está instalado' >&2
  INSTALAR="sudo dnf install -y"
fi
if ! [ -x "$(command -v yum)" ]; then
  echo 'O gerenciador de pacotes yum não está instalado' >&2
else
  echo 'O gerenciador de pacotes yum está instalado' >&2
  INSTALAR="sudo yum install"
fi
if ! [ -x "$(command -v zypper)" ]; then
  echo 'O gerenciador de pacotes zypper não está instalado' >&2
else
  echo 'O gerenciador de pacotes zypper está instalado' >&2
  INSTALAR="sudo zypper install"
fi
if ! [ -x "$(command -v eopkg)" ]; then
  echo 'O gerenciador de pacotes eopkg não está instalado' >&2
else
  echo 'O gerenciador de pacotes eopkg está instalado' >&2
  INSTALAR="sudo eopkg install"
fi
if ! [ -x "$(command -v apk)" ]; then
  echo 'O gerenciador de pacotes apk não está instalado' >&2
else
  echo 'O gerenciador de pacotes apk está instalado' >&2
  INSTALAR="sudo apk add"
fi
if ! [ -x "$(command -v urpmi)" ]; then
  echo 'O gerenciador de pacotes urpmi não está instalado' >&2
else
  echo 'O gerenciador de pacotes urpmi está instalado' >&2
  INSTALAR="urpmi"
fi
if ! [ -x "$(command -v xbps-install)" ]; then
  echo 'O gerenciador de pacotes xbps-install não está instalado' >&2
else
  echo 'O gerenciador de pacotes xbps-install está instalado' >&2
  INSTALAR="sudo xbps-install -S"
fi
if ! [ -x "$(command -v neko)" ]; then
  echo 'O gerenciador de pacotes neko não está instalado' >&2
else
  echo 'O gerenciador de pacotes neko está instalado' >&2
  INSTALAR="sudo neko em"
fi
if ! [ -x "$(command -v pisi)" ]; then
  echo 'O gerenciador de pacotes pisi não está instalado' >&2
else
  echo 'O gerenciador de pacotes pisi está instalado' >&2
  INSTALAR="sudo pisi it"
fi
if ! [ -x "$(command -v guix)" ]; then
  echo 'O gerenciador de pacotes guix não está instalado' >&2
else
  echo 'O gerenciador de pacotes guix está instalado' >&2
  INSTALAR="guix install"
fi

# Instalar apps essenciais para o terminal
if ! [ -x "$(command -v git)" ]; then
  $INSTALAR git
else
  echo 'git já estava instalado.' >&2
fi
if ! [ -x "$(command -v curl)" ]; then
  $INSTALAR curl
else
  echo 'curl já estava instalado.' >&2
fi
if ! [ -x "$(command -v wget)" ]; then
  $INSTALAR wget
else
  echo 'wget já estava instalado.' >&2
fi
if ! [ -x "$(command -v flatpak)" ]; then
  echo 'flatpak não instalado.' >&2
  $INSTALAR flatpak
else
  echo 'flatpak já estava instalado.' >&2
fi
if ! [ -x "$(command -v snap)" ]; then
  echo 'snapd não instalado.' >&2
  if [ $DISTRO == "arch" ]; then
    git clone https://aur.archlinux.org/snapd.git
    cd snapd
    makepkg -si
    sudo systemctl enable --now snapd.socket
    sudo ln -s /var/lib/snapd/snap /snap
  fi
  if [ $DISTRO == "centos" ]; then
    sudo yum install epel-release
    sudo yum install snapd
    sudo systemctl enable --now snapd.socket
    sudo ln -s /var/lib/snapd/snap /snap
  fi
  if [ $DISTRO == "debian" ]; then
    sudo apt update
    sudo apt install snapd
  fi
  if [ $DISTRO == "fedora" ]; then
    sudo dnf install snapd
    sudo ln -s /var/lib/snapd/snap /snap
  fi
  if [ $DISTRO == "manjaro" ]; then
    sudo pacman -S snapd
    sudo systemctl enable --now snapd.socket
    sudo ln -s /var/lib/snapd/snap /snap
  fi
  if ! [ -x "$(command -v snap)" ]; then
    $INSTALAR snapd
    sudo systemctl enable --now snapd.socket
    sudo ln -s /var/lib/snapd/snap /snap
  fi
else
  echo 'snapd já estava instalado.' >&2
fi
echo " "

# Instalando aplicativos flatpak e snap
flatpak --user remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
flatpak install flathub --system com.google.Chrome
snap install freecad-mechanical
flatpak install flathub --system com.anydesk.Anydesk
flatpak install flathub --system eu.scarpetta.PDFMixTool
flatpak install flathub --system io.github.shiftey.Desktop # GitHub Desktop
if ! [ -x "$(command -v openshot)" ]; then
  flatpak install flathub --system org.openshot.OpenShot
else
  echo 'openshot já estava instalado.' >&2
fi
if ! [ -x "$(command -v vlc)" ]; then
  flatpak install flathub --system org.videolan.VLC
else
  echo 'vlc já estava instalado.' >&2
fi
if ! [ -x "$(command -v remmina)" ]; then
  flatpak install flathub --system org.remmina.Remmina
else
  echo 'remmina já estava instalado.' >&2
fi
if ! [ -x "$(command -v libreoffice)" ]; then
  flatpak install flathub --system org.libreoffice.LibreOffice
else
  echo 'libreoffice já estava instalado.' >&2
fi
if ! [ -x "$(command -v gimp)" ]; then
  flatpak install flathub --system org.gimp.GIMP
else
  echo 'gimp já estava instalado.' >&2
fi
if ! [ -x "$(command -v desktopeditors)" ]; then
  flatpak install flathub --system org.onlyoffice.desktopeditors
else
  echo 'onlyoffice já estava instalado.' >&2
fi

echo "Copiando scripts"
echo "Scripts atualizados em:" > $HOME/0_data_atualizado.txt
cd $HOME
rm -rf LinuxScripts
git clone https://github.com/riqueenz/LinuxScripts.git
cd LinuxScripts
sudo \cp * /usr/bin
if [ $DISTRO == "manjaro" ]; then
  sudo \cp $HOME/LinuxScripts/config/etc/security/faillock.conf /etc/security/faillock.conf
fi
if [ $DISTRO == "arch" ]; then
  sudo \cp $HOME/LinuxScripts/config/etc/security/faillock.conf /etc/security/faillock.conf
fi
rm -rf ../LinuxScripts
cd $HOME

